this addAction  
[ 
    if (locked this < 2) then {"Lock"} else {"Unlock"}, 
 { 
  params ["_target", "_caller", "_actionId", "_arguments"]; 
    
  if (locked _target < 2) then 
  { 
   _target lock 2; 
   _target setUserActionText [_actionId, "Unlock"]; 
  } 
  else 
  { 
   _target lock 0; 
   _target setUserActionText [_actionId, "Lock"]; 
  }  
 } 
];
this addaction
["Move In Commander"
	{
	params ["_target", "_caller", "_actionId", "_arguments"];
	if (isNull(crew _target select 2)) || (!_caller In (crew _target)) then
		_caller moveInCommander _target;
	};
];
this addaction
["Move In Gunner"
	{
	params ["_target", "_caller", "_actionId", "_arguments"];
	if (isNull(crew _target select 1)) || (!_caller In (crew _target)) then
		_caller moveInGunner _target;
	};
];
this addaction
["Move In Driver"
	{
	params ["_target", "_caller", "_actionId", "_arguments"];
	if (isNull(crew _target select 0)) || (!_caller In (crew _target)) then
		_caller moveInGunner _target;
	};
];********************
	
		
Nevermind. Figured it out. Place a unit near the object; define object = nearestObject [unit, "object classname"]; unit moveInGunner object.